package com.pb.dao;

import java.util.List;

import org.springframework.orm.hibernate3.HibernateTemplate;

import com.pb.domain.PageBean;
import com.pb.domain.Person;

public class PersonDaoImpl extends HibernateTemplate implements PersonDao{
	
	@Override
	public void save(Person person) {
		super.save(person);		
	}

	@Override
	public void delete(Person person) {
		super.delete(person);
	}

	@Override
	public void update(Person person) {
	super.update(person);
		
	}

	@Override
	public Person findByid(Integer id) {
		return super.get(Person.class, id);	
	}

	@Override
	public List<Person> PersonAll() {
		
		//super.loadAll(Person.class);
		return super.find("from Person");
	}

	@Override
	public List<Person> queryByPage(String hql, int offset, int pageSize) {
		List<Person> list = null;
		/*super.f
		Query query = session.createQuery(hql).setFirstResult(offset).setMaxResults(pageSize);
        
        list = query.list();*/
		return null;
	}

	@Override
	public int getAllRowCount(String hql) {
		 int allRows = 0;
		 allRows=super.find(hql).size();
		 
		return allRows;
	}

	 public PageBean getPageBean(int pageSize, int page){
		 
	        PageBean pageBean = new PageBean();
	        
	        String hql = "from Person";
	        
	        int allRows = personDAO.getAllRowCount(hql);
	        
	        int totalPage = pageBean.getTotalPages(pageSize, allRows);
	        
	        int currentPage = pageBean.getCurPage(page);
	        
	        int offset = pageBean.getCurrentPageOffset(pageSize, currentPage);
	        
	        List<Person> list = personDAO.queryByPage(hql, offset, pageSize);
	        
	        pageBean.setList(list);
	        pageBean.setAllRows(allRows);
	        pageBean.setCurrentPage(currentPage);
	        pageBean.setTotalPage(totalPage);
	        
	        return pageBean;
	    }

}
